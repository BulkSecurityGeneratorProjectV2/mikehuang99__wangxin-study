<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wangxin.langshu.business.edu.dao.course.impl.mapper.ChapterMapper" >
  <resultMap id="BaseResultMap" type="com.wangxin.langshu.business.edu.entity.course.old.Chapter" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modified_time" property="modifiedTime" jdbcType="TIMESTAMP" />
    <result column="valid_value" property="validValue" jdbcType="TINYINT" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="course_id" property="courseId" jdbcType="VARCHAR" />
    <result column="chapter_name" property="chapterName" jdbcType="VARCHAR" />
    <result column="chapter_desc" property="chapterDesc" jdbcType="VARCHAR" />
    <result column="is_free" property="isFree" jdbcType="TINYINT" />
    <result column="chapter_original" property="chapterOriginal" jdbcType="DECIMAL" />
    <result column="chapter_discount" property="chapterDiscount" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, create_time, modified_time, valid_value, sort, course_id, chapter_name, chapter_desc, 
    is_free, chapter_original, chapter_discount
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.wangxin.langshu.business.edu.entity.course.old.ChapterExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from chapter
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit ${limitStart} , ${pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String"  >
    select 
    <include refid="Base_Column_List" />
    from chapter
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String"  >
    delete from chapter
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.wangxin.langshu.business.edu.entity.course.old.ChapterExample" >
    delete from chapter
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wangxin.langshu.business.edu.entity.course.old.Chapter" >
    insert into chapter (id, create_time, modified_time, 
      valid_value, sort, course_id, 
      chapter_name, chapter_desc, is_free, 
      chapter_original, chapter_discount)
    values (#{id,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{modifiedTime,jdbcType=TIMESTAMP}, 
      #{validValue,jdbcType=TINYINT}, #{sort,jdbcType=INTEGER}, #{courseId,jdbcType=VARCHAR}, 
      #{chapterName,jdbcType=VARCHAR}, #{chapterDesc,jdbcType=VARCHAR}, #{isFree,jdbcType=TINYINT}, 
      #{chapterOriginal,jdbcType=DECIMAL}, #{chapterDiscount,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.wangxin.langshu.business.edu.entity.course.old.Chapter" >
    insert into chapter
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifiedTime != null" >
        modified_time,
      </if>
      <if test="validValue != null" >
        valid_value,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="chapterName != null" >
        chapter_name,
      </if>
      <if test="chapterDesc != null" >
        chapter_desc,
      </if>
      <if test="isFree != null" >
        is_free,
      </if>
      <if test="chapterOriginal != null" >
        chapter_original,
      </if>
      <if test="chapterDiscount != null" >
        chapter_discount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedTime != null" >
        #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="validValue != null" >
        #{validValue,jdbcType=TINYINT},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="chapterName != null" >
        #{chapterName,jdbcType=VARCHAR},
      </if>
      <if test="chapterDesc != null" >
        #{chapterDesc,jdbcType=VARCHAR},
      </if>
      <if test="isFree != null" >
        #{isFree,jdbcType=TINYINT},
      </if>
      <if test="chapterOriginal != null" >
        #{chapterOriginal,jdbcType=DECIMAL},
      </if>
      <if test="chapterDiscount != null" >
        #{chapterDiscount,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wangxin.langshu.business.edu.entity.course.old.ChapterExample" resultType="java.lang.Integer" >
    select count(*) from chapter
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update chapter
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedTime != null" >
        modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.validValue != null" >
        valid_value = #{record.validValue,jdbcType=TINYINT},
      </if>
      <if test="record.sort != null" >
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.courseId != null" >
        course_id = #{record.courseId,jdbcType=VARCHAR},
      </if>
      <if test="record.chapterName != null" >
        chapter_name = #{record.chapterName,jdbcType=VARCHAR},
      </if>
      <if test="record.chapterDesc != null" >
        chapter_desc = #{record.chapterDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.isFree != null" >
        is_free = #{record.isFree,jdbcType=TINYINT},
      </if>
      <if test="record.chapterOriginal != null" >
        chapter_original = #{record.chapterOriginal,jdbcType=DECIMAL},
      </if>
      <if test="record.chapterDiscount != null" >
        chapter_discount = #{record.chapterDiscount,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update chapter
    set id = #{record.id,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      valid_value = #{record.validValue,jdbcType=TINYINT},
      sort = #{record.sort,jdbcType=INTEGER},
      course_id = #{record.courseId,jdbcType=VARCHAR},
      chapter_name = #{record.chapterName,jdbcType=VARCHAR},
      chapter_desc = #{record.chapterDesc,jdbcType=VARCHAR},
      is_free = #{record.isFree,jdbcType=TINYINT},
      chapter_original = #{record.chapterOriginal,jdbcType=DECIMAL},
      chapter_discount = #{record.chapterDiscount,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wangxin.langshu.business.edu.entity.course.old.Chapter" >
    update chapter
    <set >
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedTime != null" >
        modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="validValue != null" >
        valid_value = #{validValue,jdbcType=TINYINT},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="chapterName != null" >
        chapter_name = #{chapterName,jdbcType=VARCHAR},
      </if>
      <if test="chapterDesc != null" >
        chapter_desc = #{chapterDesc,jdbcType=VARCHAR},
      </if>
      <if test="isFree != null" >
        is_free = #{isFree,jdbcType=TINYINT},
      </if>
      <if test="chapterOriginal != null" >
        chapter_original = #{chapterOriginal,jdbcType=DECIMAL},
      </if>
      <if test="chapterDiscount != null" >
        chapter_discount = #{chapterDiscount,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wangxin.langshu.business.edu.entity.course.old.Chapter" >
    update chapter
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      valid_value = #{validValue,jdbcType=TINYINT},
      sort = #{sort,jdbcType=INTEGER},
      course_id = #{courseId,jdbcType=VARCHAR},
      chapter_name = #{chapterName,jdbcType=VARCHAR},
      chapter_desc = #{chapterDesc,jdbcType=VARCHAR},
      is_free = #{isFree,jdbcType=TINYINT},
      chapter_original = #{chapterOriginal,jdbcType=DECIMAL},
      chapter_discount = #{chapterDiscount,jdbcType=DECIMAL}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>